{"componentChunkName":"component---src-templates-post-jsx","path":"/python-mro/","result":{"data":{"markdownRemark":{"html":"<p>파이썬에서 클래스를 상속했을 때 메서드가 어떤 방식으로 실행되는지 알아보자.</p>\n<p>인스턴스의 메서드를 실행한다고 가정할 때 <code>__getattribute__()</code>로 bound된 method를 가져온 후 메서드를 실행한다. 메서드를 가져오는 순서는 <code>__mro__</code>에 따른다. MRO(method resolution order)는 메소드를 확인하는 순서로 파이썬 2.3 이후 C3 알고리즘이 도입되어 지금까지 사용되고있다. 단일상속 혹은 다중상속일 때 어떤 순서로 메서드에 접근할지는 해당 클래스의 <code>__mro__</code>에 저장되는데 왼쪽에 있을수록 우선순위가 높다. B, C를 다중상속받은 D 클래스가 있고, B와 C는 각각 A를 상속받았을 때(다이아몬드 상속) D의 mro를 조회하면 볼 수 있듯이 부모클래스는 반드시 자식클래스 이후에 위치해있다. 최상위 object 클래스까지 확인했는데도 적절한 메서드가 없으면 <code>AttributeError</code>를 발생시킨다.</p>\n<pre><code class=\"language-python\">class A:\n    pass\n\nclass B(A):\n    pass\n\nclass C(A):\n    pass\n\nclass D(B, C):\n    pass\n\n>>> D.__mro__\n(__main__.D, __main__.B, __main__.C, __main__.A, object)\n</code></pre>\n<p>Python 2.3 이후 아래 이미지와 같은 상속을 시도하려하면 <code>TypeError: Cannot create a consistent method resolution</code> 오류가 발생한다.</p>\n<p><img src=\"https://makina-corpus.com/blog/metier/2014/python-mro-conflict\" alt=\"\"></p>\n<h4>Reference</h4>\n<ul>\n<li><a href=\"https://kimdoky.github.io/python/2017/11/28/python-inheritance.html\">INHERITANCE(상속), MRO</a></li>\n<li><a href=\"https://stackoverflow.com/questions/2010692/what-does-mro-do\">What does mro do</a></li>\n<li><a href=\"https://www.python.org/download/releases/2.3/mro/\">Python 2.3이후의 MRO 알고리즘에 대한 파이썬 공식 문서</a></li>\n<li><a href=\"https://stackoverflow.com/questions/3786881/what-is-a-method-in-python/3787670#3787670\">What is a method in python</a></li>\n</ul>","frontmatter":{"title":"Python의 메서드 실행 방식 (MRO)","image":null},"excerpt":"파이썬에서 클래스를 상속했을 때 메서드가 어떤 방식으로 실행되는지 알아보자. 인스턴스의 메서드를 실행한다고 가정할 때 __getattribute__()로 bound된 method를 가져온 후 메서드를 실행한다. 메서드를 가져오는 순서는 __mro__…"}},"pageContext":{"slug":"python-mro","date":"2018-02-13","lastmod":"2018-02-13"}},"staticQueryHashes":["269600272","3159585216"],"slicesMap":{}}