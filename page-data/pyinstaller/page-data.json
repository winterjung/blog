{"componentChunkName":"component---src-templates-post-jsx","path":"/pyinstaller/","result":{"data":{"markdownRemark":{"html":"<p>원래 쓰려던 것은 <code>pyinstaller</code>로 <code>requests</code>라이브러리가 포함된 코드를 빌드할 때 발생하는 에러와 그에 관한 해결 방법을 포스팅하려 했으나, 이는 뒤로 넘기고 먼저 <code>pyinstaller</code>를 통해 <code>PyQt5</code>라이브러리를 사용한 python코드를 윈도우 exe파일로 만드는 법을 적고자 한다.</p>\n<blockquote>\n<p>참고로 아래 방법을 통해 윈도우8.1과 윈도우10에서 동작하는 exe는 만들 수 있었으나, 윈도우7에서는 오류가 났고 macOS에서도 동작하지 않았다.</p>\n</blockquote>\n<pre><code class=\"language-shell\">> pip install pyinstaller\n> pyinstaller --version\n3.2.1\n> pyinstaller main.py\n</code></pre>\n<p>2017년 2월 24일 기준으로 <code>3.2.1버전</code>의 <code>pyinstaller</code>를 설치할 수 있다.<br>\n<code>pyinstaller main.py</code>를 하면 <code>main.py</code>가 실행되는 exe파일이 <code>dist</code>폴더 아래에 생성된다.</p>\n<p>pyinstaller의 옵션은 다양하지만 보통 쓰이는 옵션은 몇 개 안된다.</p>\n<ul>\n<li><code>-F</code>, <code>--onefile</code>: 최종 출력으로 exe파일 하나만 생성한다.</li>\n<li><code>-w</code>, <code>--windowed</code>: 콘솔 창이 출력되지 않게한다.</li>\n<li><code>-i</code>, <code>--icon</code>: exe파일의 아이콘을 지정한다.</li>\n</ul>\n<p>더 자세한 설명과 옵션들은 아래의 이미지 참고.<br>\n<img src=\"https://winterj.me/images/20170223/option.png\" alt=\"options\"></p>\n<hr>\n<p>더불어 PyQt5를 빌드하기 위해서는 PyQt5의 bin폴더를 환경변수에 추가해줘야한다.<br>\n보통은 PyQt를 설치할 때 자동으로 추가되나 만약 추가되지 않은경우 <code>lib not found</code>같은 에러와 함께 PyQt의 여러 dll들을 찾지 못한다는 에러가 난다.<br>\n추가해야 하는 경로의 예시는 <code>C:\\Python35\\Lib\\site-packages\\PyQt5\\Qt\\bin</code>이다.</p>\n<blockquote>\n<p>당연히 위의 경로는 하나의 예시일 뿐이므로 그대로 갖다 붙이지말자.</p>\n</blockquote>\n<hr>\n<p>윈도우 10에서는 <code>WARNING: lib not found: api-ms-win-core-*.dll</code>같은 에러가 출력되는데 이를 해결하기 위해 아래의 페이지를 참고하자.</p>\n<ul>\n<li><a href=\"https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/\">마이크로소프트 SDK파일 다운로드</a></li>\n<li><a href=\"https://github.com/pyinstaller/pyinstaller/issues/1566\">pyinstaller 깃허브 이슈페이지</a></li>\n</ul>\n<p>github issue페이지에서 이 답변이 제일 도움이 되었다.</p>\n<hr>\n<p>The following solved the problem for me (on Win10 v1607 - PyQt5 App):</p>\n<p>Add the directory of the required dlls to system Path.<br>\nMy application uses PyQt5 which is dependent on api-ms-win dlls.</p>\n<p>For PyQt5 add this directory: <code>%WHERE EVER YOU INSTALLED PYTHON%\\Lib\\site-packages\\PyQt5\\Qt\\bin</code></p>\n<p>For api-ms-win dlls you need Visual Studio 2015 OR Windows SDK (download here):<br>\nDirectory if you have Visual Studio:<br>\n<code>C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\Remote Debugger\\x64</code><br>\nDirectory if you have Windows SDK:<br>\n<code>C:\\Program Files (x86)\\Windows Kits\\10\\Redist\\ucrt\\DLLs\\x64</code></p>\n<p>After you add the required paths, pyinstaller can find the files.</p>\n<hr>\n<p>하여튼 나는 PyQt5의 bin폴더와 저 <code>api-ms-win-core-*.dll</code>을 한 폴더에 몰아주고 <code>-p</code> 옵션으로 폴더를 인식시키고 아래의 명령어를 실행하여 윈도우8.1과 윈도우10에서 동작하는 exe파일을 얻을 수 있었다.<br>\n<code>pyinstaller --onefile --windowed --icon=heart.ico --clean -p C:\\test main.py</code></p>\n<p>다음 포스팅으로 쓸 내용을 그냥 써보자면<br>\n<code>pyinstaller 3.2버전</code>과 <code>requests 2.13버전</code>을 썼을 때 <code>urllib3</code>과 <code>queue</code>의 <code>import error</code>가 나는 문제는 그냥 <code>requests</code>라이브러리 버전을 <code>2.5</code>로 낮춰 해결했다.</p>\n<blockquote>\n<p>참고 블로그 : <a href=\"http://slays.tistory.com/42\">PYINSTALLER EXE 파일 빌드하며 짜증났던 부분 정리</a></p>\n</blockquote>","frontmatter":{"title":"Pyinstaller로 PyQt5코드를 exe로 만들기","image":null},"excerpt":"원래 쓰려던 것은 pyinstaller로 requests라이브러리가 포함된 코드를 빌드할 때 발생하는 에러와 그에 관한 해결 방법을 포스팅하려 했으나, 이는 뒤로 넘기고 먼저 pyinstaller를 통해 PyQt5라이브러리를 사용한 python코드를…"}},"pageContext":{"slug":"pyinstaller","date":"2017-02-23","lastmod":"2017-02-23"}},"staticQueryHashes":["269600272","3159585216"],"slicesMap":{}}